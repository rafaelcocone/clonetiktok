{"version":3,"sources":["js/VideoFooter.js","js/VideoSidebar.js","js/Videos.js","App.js","reportWebVitals.js","index.js"],"names":["VideoFooter","channel","description","song","className","mode","index","src","alt","VideoSidebar","likes","shares","messages","useState","liked","setLiked","fontSize","onClick","e","Videos","url","playing","setPlaying","videoRef","useRef","current","pause","play","ref","loop","type","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kUA+BeA,MA1Bf,YAAsD,IAA/BC,EAA8B,EAA9BA,QAASC,EAAqB,EAArBA,YAAaC,EAAQ,EAARA,KACzC,OAAO,sBAAKC,UAAU,cAAf,UACH,sBAAKA,UAAU,oBAAf,UACI,6BAAMH,IACN,4BAAKC,IACL,sBAAKE,UAAU,sBAAf,UACI,cAAC,IAAD,CACIA,UAAU,sBACd,cAAC,IAAD,CAAQC,KAAK,SAAb,SACK,cAAGC,MAAH,OACG,mCACI,4BAAKH,eAOzB,qBACIC,UAAU,sBACVG,IAAI,2BACJC,IAAI,S,4ECiBDC,MApCf,YAAkD,IAA3BC,EAA0B,EAA1BA,MAAOC,EAAmB,EAAnBA,OAAQC,EAAW,EAAXA,SAAW,EAEnBC,oBAAS,GAFU,mBAEtCC,EAFsC,KAE/BC,EAF+B,KAI7C,OAAO,sBAAKX,UAAU,eAAf,UACH,sBAAKA,UAAU,uBAAf,UAEKU,EACG,cAAC,IAAD,CAAcE,SAAS,QACnBC,QAAS,SAACC,GAAD,OAAOH,GAAS,MAG7B,cAAC,IAAD,CAAoBC,SAAS,QACzBC,QAAS,SAACC,GAAD,OAAOH,GAAS,MAGjC,4BAAKD,EAAQJ,EAAM,EAAGA,OAI1B,sBAAKN,UAAU,uBAAf,UACI,cAAC,IAAD,CAAaY,SAAS,UACtB,4BAAKJ,OAKT,sBAAKR,UAAU,uBAAf,UACI,cAAC,IAAD,CAAWY,SAAS,UACpB,4BAAKL,WCkBFQ,MA/Cf,YAAuE,IAAtDC,EAAqD,EAArDA,IAAKV,EAAgD,EAAhDA,MAAMC,EAA0C,EAA1CA,OAAOC,EAAmC,EAAnCA,SAAST,EAA0B,EAA1BA,KAAKD,EAAqB,EAArBA,YAAYD,EAAS,EAATA,QAAS,EAEnCY,oBAAS,GAF0B,mBAE3DQ,EAF2D,KAElDC,EAFkD,KAG5DC,EAAWC,iBAAO,MAexB,OACI,sBAAKpB,UAAU,QAAf,UAEI,uBAAOA,UAAU,gBACba,QAjBa,WAElBI,GACCE,EAASE,QAAQC,QACjBJ,GAAW,KAIXC,EAASE,QAAQE,OACjBL,GAAW,KAUPM,IAAKL,EACLM,MAAI,EAJR,SAKI,wBAAQtB,IAAKa,EAAKU,KAAK,gBAG3B,cAAC,EAAD,CACI7B,QAAUA,EACVC,YAAcA,EACdC,KAAQA,IAGZ,cAAC,EAAD,CACIO,MAAQA,EACRC,OAASA,EACTC,SAAWA,QCFZmB,MAxCf,WACE,OACE,sBAAK3B,UAAU,MAAf,UACE,8CAEA,sBAAKA,UAAU,cAAf,UACE,cAAC,EAAD,CACEgB,IAAI,sBACJV,MAAO,IACPC,OAAQ,IACRC,SAAU,IACVT,KAAK,aACLD,YAAY,kBACZD,QAAS,qBAEX,cAAC,EAAD,CACEmB,IAAI,sBACJV,MAAO,IACPC,OAAQ,IACRC,SAAU,IACVT,KAAK,aACLD,YAAY,kBACZD,QAAS,qBAEX,cAAC,EAAD,CACEmB,IAAI,sBACJV,MAAO,IACPC,OAAQ,IACRC,SAAU,IACVT,KAAK,aACLD,YAAY,kBACZD,QAAS,4BCtBJ+B,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.9f147e1a.chunk.js","sourcesContent":["import React from 'react'\r\nimport '../css/VideoFooter.css'\r\nimport MusicNoteIcon from '@material-ui/icons/MusicNote';\r\nimport Ticker from 'react-ticker'\r\n\r\nfunction VideoFooter({ channel, description, song }) {\r\n    return <div className=\"videoFooter\">\r\n        <div className=\"videoFooter__text\">\r\n            <h3>{ channel}</h3>\r\n            <p>{ description }</p>\r\n            <div className=\"videoFooter__ticker\">\r\n                <MusicNoteIcon\r\n                    className='videoFooter__icon' />\r\n                <Ticker mode='smooth'>\r\n                    {({ index }) => (\r\n                        <>\r\n                            <p>{ song }</p>\r\n                        </>\r\n                    )}\r\n                </Ticker>\r\n\r\n            </div>\r\n        </div>\r\n        <img \r\n            className='videoFooter__record'    \r\n            src=\"./Reikosummonspuppet.png\" \r\n            alt=\"\"\r\n        />\r\n    </div>\r\n}\r\n\r\nexport default VideoFooter\r\n","import React, { useState } from 'react'\r\nimport '../css/VideoSidebar.css'\r\nimport FavoriteIcon from '@material-ui/icons/Favorite';\r\nimport FavoriteBorderIcon from '@material-ui/icons/FavoriteBorder';\r\nimport MessageIcon from '@material-ui/icons/Message';\r\nimport ShareIcon from '@material-ui/icons/Share';\r\n\r\nfunction VideoSidebar({likes, shares, messages}) {\r\n\r\n    const [liked, setLiked] = useState(false);\r\n\r\n    return <div className=\"videoSidebar\">\r\n        <div className=\"videoSidebar__button\">\r\n            \r\n            {liked ? (\r\n                <FavoriteIcon fontSize=\"large\" \r\n                    onClick={(e) => setLiked(false)}\r\n                />\r\n            ):(\r\n                <FavoriteBorderIcon fontSize=\"large\"\r\n                    onClick={(e) => setLiked(true)}\r\n                />\r\n            )}\r\n            <p>{ liked ? likes+1: likes }</p>\r\n\r\n        </div>\r\n\r\n        <div className=\"videoSidebar__button\">\r\n            <MessageIcon fontSize=\"large\" />\r\n            <p>{ messages }</p>\r\n\r\n\r\n        </div>\r\n\r\n        <div className=\"videoSidebar__button\">\r\n            <ShareIcon fontSize=\"large\" />\r\n            <p>{ shares }</p>\r\n\r\n        </div>\r\n\r\n    </div>\r\n}\r\n\r\nexport default VideoSidebar\r\n","import React, { useState, useRef } from 'react'\r\n\r\n\r\nimport \"../css/Video.css\"\r\nimport VideoFooter from './VideoFooter';\r\nimport VideoSidebar from './VideoSidebar';\r\n\r\nfunction Videos({url, likes,shares,messages,song,description,channel}){\r\n\r\n    const [playing, setPlaying]  = useState(false)\r\n    const videoRef = useRef(null);\r\n\r\n    const handleVideoPress = () => {\r\n        //si este video esta en reproduccion ... se detine\r\n        if(playing){\r\n            videoRef.current.pause();\r\n            setPlaying(false)\r\n        }\r\n        //sino se reproduce\r\n        else{\r\n            videoRef.current.play()\r\n            setPlaying(true)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"video\">\r\n\r\n            <video className=\"video__player\"\r\n                onClick={handleVideoPress}\r\n               \r\n                ref={videoRef}\r\n                loop >\r\n                <source src={url} type=\"video/mp4\"/>\r\n            </video>\r\n\r\n            <VideoFooter \r\n                channel={ channel }\r\n                description={ description }\r\n                song= { song}\r\n            />\r\n           \r\n            <VideoSidebar \r\n                likes={ likes } \r\n                shares={ shares }\r\n                messages={ messages }\r\n            />\r\n          \r\n        </div>\r\n\r\n       \r\n    )\r\n}\r\n\r\nexport default Videos","import './App.css';\nimport Video from \"./js/Videos\"\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <h1>MERN TIK TOK</h1>\n\n      <div className=\"app__videos\">\n        <Video \n          url='./Videos/video1.mp4'\n          likes={111}\n          shares={222}\n          messages={333}\n          song='la cancion'\n          description='una descripcion'\n          channel= 'este es el canal'\n        />\n        <Video \n          url='./Videos/video1.mp4'\n          likes={111}\n          shares={222}\n          messages={333}\n          song='la cancion'\n          description='una descripcion'\n          channel= 'este es el canal'\n        />\n        <Video \n          url='./Videos/video1.mp4'\n          likes={999}\n          shares={888}\n          messages={777}\n          song='la cancion'\n          description='una descripcion'\n          channel= 'este es el canal'\n        />\n      </div>\n\n\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}